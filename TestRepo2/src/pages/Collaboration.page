<!------------------------------------------------------------------------------
Name				: Collaboration.page

Updated By  : Basant Verma (AppirioOffShore)   
Date        : 6/17/13
Story/Task  : US495/DE600
------------------------------------------------------------------------------->
<apex:page showheader="false" standardStylesheets="false" sidebar="false" title="Diageo" controller="Controller_Collaboration">
    <apex:stylesheet value="{!URLFOR($Resource.CommonPage, 'style'+siteTheme+'.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.CollaborationPage, 'style'+siteTheme+'.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.jquery, 'customDatePicker.css')}"/> 
    <style type="text/css">
        body, html {
            overflow: hidden;
        }
        .ui-datepicker-buttonpane {
            display: none;
        }
        .ui-datepicker {
            z-index: 3000 !important;
        }
		.readyToShowInvisible {
		  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0) !important";
		  filter: alpha(opacity=1) !important;
		  -moz-opacity: 0.0 !important;
		  -khtml-opacity: 0.0 !important;
		  opacity: 0.0 !important;
		}
		.underlineText {
			text-decoration: underline;
		}
		
    </style>    
    
    
    <c:loader />
    <div class="content-wrapper" style="overflow: visible !important;">
        <!-- PAGE HEADER -->
        <c:pageHeader showThemeSelector="true" isLoggedIn="{!isLoggedIn}" basketItemsNumber="{!basketItemsNo}" />

        <script type="text/javascript">
            pageViewed('Collaboration');
        </script> 
 
        <!--  BREADCRUMB -->  
        <apex:outputPanel id="beadcrumblinks"> 
        
            <c:pageBreadcrumb breadcrumbLinks="{!breadCrumbLinks}" menuLinks="{!menuLinks}" showExtendedBreancrumbs="true" breadcrumbHolder="{!organizationalUnitBreadcrumbs}"/>
        </apex:outputPanel> 
            
        <div class="content bggradient {!if(ISNULL(siteTheme),'hidden','')}" style="overflow: visible !important;">
            <!-- CONTENT -->
            <apex:form >                
                <apex:outputPanel id="messages">
                    <apex:messages styleClass="errorMessagesList" /> 
                </apex:outputPanel> 
                <apex:actionFunction status="ajax-status" name="showContent" action="{!showContent}" rerender="pageContent, beadcrumblinks, messages, addCommentDialog,  uploadDialog, editDialog" oncomplete="populateFileUploadWithCurrentDestination();">
                    <apex:param name="distributorId" assignTo="{!currentDistributorId}" value="" />
                    <apex:param name="distributor" assignTo="{!currentDistributor}" value="" />
                </apex:actionFunction>
                
                <apex:actionFunction status="ajax-status" name="nextOrganizationalUnit" action="{!nextOrganizationalUnit}" rerender="pageContent, beadcrumblinks, messages, addCommentDialog,  uploadDialog, editDialog" oncomplete="populateFileUploadWithCurrentDestination();">
                    <apex:param name="mapL" assignTo="{!currentOrganizationalUnit}" value="" />
                    <apex:param name="key" assignTo="{!selectedIterator}" value="" />
                </apex:actionFunction> 
                 
                <apex:actionFunction status="ajax-status" name="distributorsContent" action="{!distributorsContent}" rerender="pageContent, beadcrumblinks, messages, addCommentDialog,  uploadDialog, editDialog" oncomplete="populateFileUploadWithCurrentDestination();">
                    <apex:param name="currentDistributorId" assignTo="{!currentDistributorId}" value="" />
                    <apex:param name="currentDistributor" assignTo="{!currentDistributor}" value="" />
                    <apex:param name="currentOrganizationalUnit" assignTo="{!currentOrganizationalUnit}" value="" />
                    <apex:param name="key2" assignTo="{!selectedIterator}" value="" />
                </apex:actionFunction>              
                 
                <apex:actionFunction status="ajax-status" name="switchSection" action="{!switchSection}" rerender="messages, pageContent, beadcrumblinks, addCommentDialog, uploadDialog, editDialog" oncomplete="populateFileUploadWithCurrentDestination();">
                    <apex:param name="switchSection" assignTo="{!currentSection}" value="" />
                </apex:actionFunction>
                <apex:actionFunction status="ajax-status" name="switchSubSection" action="{!switchSubSection}" rerender="messages, pageContent, beadcrumblinks, addCommentDialog, uploadDialog, editDialog" oncomplete="populateFileUploadWithCurrentDestination();">
                    <apex:param name="switchSubSection" assignTo="{!currentSubSection}" value="" />
                </apex:actionFunction>   

                <apex:actionFunction status="ajax-status" name="changeNumberOfItemPerPage" action="{!changeNumberOfItemPerPage}" rerender="pageContent, beadcrumblinks, messages, addCommentDialog, uploadDialog"/>
                <apex:actionFunction status="ajax-status" name="showFirstPage" action="{!showFirstPage}" rerender="pageContent, beadcrumblinks, messages, addCommentDialog, uploadDialog"/>
                <apex:actionFunction status="ajax-status" name="showPrevPage" action="{!showPrevPage}" rerender="pageContent, beadcrumblinks, messages, addCommentDialog, uploadDialog, editDialog"/>

                <apex:actionFunction status="ajax-status" name="showNextPage" action="{!showNextPage}" rerender="pageContent, beadcrumblinks, messages, addCommentDialog, uploadDialog, editDialog"/>
                <apex:actionFunction status="ajax-status" name="showLastPage" action="{!showLastPage}" rerender="pageContent, beadcrumblinks, messages, addCommentDialog, uploadDialog, editDialog"/>
                <apex:actionFunction status="ajax-status" name="showPageRequested" action="{!showPageRequested}" rerender="pageContent, beadcrumblinks, messages, addCommentDialog, uploadDialog, editDialog">
                    <apex:param name="requestedPageNumber" assignTo="{!numberOfCurrentPage}" value="" />
                </apex:actionFunction>
                <apex:actionFunction status="ajax-status" name="renderAsList" action="{!renderAsList}" rerender="messages, beadcrumblinks, pageContent, uploadDialog, editDialog"/>                         
                <apex:actionFunction status="ajax-status" name="renderAsBox" action="{!renderAsBox}" rerender="messages, beadcrumblinks, pageContent, uploadDialog, editDialog" oncomplete="calculateBoxHeight();"/>                            
                <apex:actionFunction status="ajax-status" name="userAddComment" action="{!userAddComment}" rerender="messages, beadcrumblinks, addCommentDialog, uploadDialog, editDialog">                            
					<apex:param name="conversationFile" assignTo="{!currentConversationFileId}" value="" />
                </apex:actionFunction>   
                
                <apex:outputPanel id="pageContent">
                    <script>
                        var folderIdSelected = '{!currentSection}';
                        var subFolderIdSelected = '{!currentSubSection}';
                    </script>
                    <apex:outputPanel id="resultContent" rendered="{!IF(currentDistributorId != '', 'true', 'false')}">
                        <apex:outputPanel rendered="{!IF(sectionFolders.dirs.size > 0, 'true', 'false')}">
                            <div class="section-navigation">
                                <div class="section-wrapper">
                                    <apex:repeat value="{!sectionFolders.dirs}" var="folder">
                                        <div onclick="switchSection('{!folder.folderId}')" class="section-button {!if(folder.folderId = currentSection, 'section-button-active','')}"><table class="centerTable"><tr><td><apex:outputText value="{!folder.folderName}" escape="false"/></td></tr></table></div>
                                    </apex:repeat>
                                    <div class="clear-float"></div>
                                </div>
                            </div>
                        </apex:outputPanel>
                        <apex:outputPanel rendered="{!IF(subSectionFolders.dirs.size > 0, 'true', 'false')}">
                            <div class="sub-section-navigation">
                                <div class="sub-section-wrapper">
                                    <apex:repeat value="{!subSectionFolders.dirs}" var="subFolder">
                                        <div onclick="switchSubSection('{!subFolder.folderId}'); pageViewed('Collaboration - {!subFolder.folderId}');" class="sub-section-button {!if(subFolder.folderId = currentSubSection, 'sub-section-button-active','')}"><table class="centerTable"><tr><td>{!subFolder.folderName}</td></tr></table></div>
                                    </apex:repeat>
                                    <div class="clear-float"></div>                             
                                </div>
                            </div>
                        </apex:outputPanel>
                            <div class="corner-button-holder">
                                <div style="position: absolute; top: 10px; left: 10px; color: #2A96A7; font-size: 16px; font-weight: bold;">
                                    <apex:outputpanel rendered="{!if( AND(currentDistributor != null, currentDistributor != '') ,'true','false')}">
                                        {!currentDistributor}
                                    </apex:outputpanel>
                                </div>
                                <div class="pagination-right-top">
                                    <apex:outputPanel rendered="{!AND(!ISNULL(contentMap),contentSize!=0)}">                                
                                        <div class="float-left defaultTheme pagination-text-result">
                                            Showing {!showFromIndex+1}-{!showToIndex} of total {!numberOfItems} documents
                                        </div>
                                        <div class="float-left">
                                            <c:selectList width="80" options="{!NumberOfItemsPerPageList}"  value="{!numberOfItemsOnPage}" onchange="changeNumberOfItemPerPage();" />
                                        </div>
                                        <div class="clear-float"></div>
                                    </apex:outputPanel>
                                </div>
                                <div class="float-right">
                                    <apex:outputPanel rendered="{!AND(!ISNULL(contentMap),contentSize!=0)}">  
                                        <div onclick="renderAsBox();" class="show-as-box-button {!if(displayAsList != true, 'show-as-list-box-button-active','')}">
                                            <apex:image styleClass="list-box-img" url="{!URLFOR($Resource.CollaborationPage, 'images/boxView.png')}"/>                                  
                                        </div>                              
                                        <div onclick="renderAsList();" class="show-as-list-button {!if(displayAsList = true, 'show-as-list-box-button-active','')}">
                                            <apex:image styleClass="list-box-img" url="{!URLFOR($Resource.CollaborationPage, 'images/listView.png')}"/>
                                        </div>
                                        <div class="clear-float"></div>
                                    </apex:outputPanel>
                                </div>
                                <apex:outputPanel rendered="{!AND(!ISNULL(contentMap),contentSize!=0)}">                 
                                    <div class="downloadAllButton action-button float-right">
                                        <div class="action-button-ico"><apex:image url="{!URLFOR($Resource.CommonPage, 'images/downloadArrow.png')}"/></div>
                                        <div class="action-button-description">Download / Share Multiple Files</div>
                                    </div>
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!AND(isUploadFileAllowed,isUserAllowedToUploadFile)}">
                                    <div class="uploadFileButton action-button float-right">
                                        <div class="action-button-ico"><apex:image url="{!URLFOR($Resource.CommonPage, 'images/uploadArrow.png')}"/></div>
                                        <div class="action-button-description">Upload file</div>
                                    </div>
                                </apex:outputPanel>
                                <div class="clear-float"></div>
                            </div>
                        <div class="clear-float"></div>
                        <div class="float-left" style="width: {!IF(isAddCommentAllowed, '310','0')}px;">
                            <apex:outputPanel rendered="{!isAddCommentAllowed}">
                                <div class="comment-wrapper">
                                    <div class="right">
                                        <button class="green addComments" onclick="userAddComment(''); jQuery('#addCommentInfo').addClass('readyToShowInvisible'); showDialog('addCommentInfo', true); return false;">Add Post</button>
                                    </div>
                                    <div class="left comment-wrapper-spacer">
                                        <div class="comment-holder">
                                            <apex:outputPanel rendered="{!AND(!ISNULL(comments),comments.size!=0)}">
                                                <apex:repeat value="{!comments}" var="comment">
                                                    <div class="comment-content">
                                                        <span class="bold comment-header">[{!comment.Distributor_Name__r.Name}] {!comment.LastModifiedBy.name}</span> 
                                                        <span class="comment-date">
                                                            <apex:outputText value="{0,date, MM'/'dd'/'yy, HH:mm}">
                                                                <apex:param value="{!comment.LastModifiedDate}" />
                                                            </apex:outputText>
                                                        </span><br/>
                                                        <span class="comment-body">{!comment.Comment_Body__c}</span>
                                                        <apex:outputPanel rendered="{!AND(!ISNULL(comment.File__r.Id))}">
                                                            <br/><span class="reference">Reference to: <a href="/sfc/servlet.shepherd/version/download/{!comment.File__r.Content_Version_Id__c}" onclick="pageViewed('Collaboration - {!comment.File__r.Description__c}');">{!comment.File__r.Description__c}</a> <br/><span class="comment-header pointer underlineText" onclick="userAddComment('{!comment.File__r.Id}'); jQuery('#addCommentInfo').addClass('readyToShowInvisible'); showDialog('addCommentInfo', true); ">Show all conversation</span></span>
                                                        </apex:outputPanel>
                                                        <apex:outputPanel rendered="{!AND(ISNULL(comment.File__r.Id))}">
                                                            <br/><span class="reference"><span class="comment-header pointer underlineText" onclick="userAddComment(''); jQuery('#addCommentInfo').addClass('readyToShowInvisible'); showDialog('addCommentInfo', true); ">Show all conversation</span></span>
                                                        </apex:outputPanel>
                                                    </div>
                                                </apex:repeat>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!OR(ISNULL(comments),comments.size=0)}">
                                                <div class="content-no-items-msg">No comments.</div>
                                            </apex:outputPanel>
                                        </div>
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                        <div class="float-left" style="width: {!IF(isAddCommentAllowed, '630','940')}px;">
	                        <div id="downloadAllInfo" class="hidden dialog" >
	                            <c:downloadAll content="{!contentList}" isFileObject="true"/>
	                        </div>
		                    <apex:repeat value="{!headers}" var="headerKey" id="headersRepeat">
	                            <div class="sub-header">{!headerKey}</div>
	                            <apex:outputPanel rendered="{!OR(ISNULL(contentMap[headerKey]),contentSize=0)}">
	                                <div class="content-no-items-msg">No items.</div>
	                            </apex:outputPanel>
	                            <apex:outputPanel rendered="{!AND(!ISNULL(contentMap[headerKey]),contentSize!=0)}">
	                                <apex:repeat value="{!contentHolderMap[headerKey]}" var="contentItem">
	                                		<apex:outputPanel rendered="{!if(displayAsList != true,'true','false')}">
	                                       <!-- START : Changed for US495/DE600 - Basant verma (Added one more attribute editableIds) -->
	                                       <c:contentItem editableIds="{!contentCanEditIds}" followIds="{!currentFollowIds}" numberOfComments="{!contentComments[contentItem.contentId]}" allowFileConversation="{!isAddCommentAllowed}" allowFileEdit="{!allowFileEdit}" basketIds="{!currentBasketIds}" aggregated="{!contentItem}" width="301" lastLoginDateItem="{!lastLoginDate}" displayUploadDate="true"/> 
	                                       <!-- END : Changed for US495/DE600 - Basant verma (Added one more attribute editableIds) -->
	                                    </apex:outputPanel>
	                                    <apex:outputPanel rendered="{!if(displayAsList = true,'true','false')}"> 
	                                        <!-- START : Changed for US495/DE600 - Basant verma (Added one more attribute editableIds) -->
	                                        <c:contentItem editableIds="{!contentCanEditIds}" followIds="{!currentFollowIds}" numberOfComments="{!contentComments[contentItem.contentId]}" allowFileConversation="{!isAddCommentAllowed}" allowFileEdit="{!allowFileEdit}" basketIds="{!currentBasketIds}" aggregated="{!contentItem}" renderAsList="true" displayUploadDate="true" lastLoginDateItem="{!lastLoginDate}"/> 
	                                        <!-- END : Changed for US495/DE600 - Basant verma (Added one more attribute editableIds) -->
	                                    </apex:outputPanel>
	                                </apex:repeat>
                                   <div class="clear-float"></div>
                               </apex:outputPanel>
                            </apex:repeat>
                            <c:pagination totalNumberOfPages="{!numberOfPages}" isNewContent="{!isNewContent}" pageNumbers="{!pageNumbers}" numberOfCurrentPage="{!numberOfCurrentPage}" />
                        </div>
                        <div class="clear-float"></div>
                    </apex:outputPanel>
                </apex:outputPanel>
            </apex:form>
        </div>
        <!-- PAGE FOOTER -->
        <c:pageFooter isInternal="{!isInternalUser}" />
    
        <apex:form >
            <apex:actionFunction status="ajax-status" name="userShareOverview" action="{!userShareOverview}" rerender="overviewDialog, shareDialog, messages">
                <apex:param name="cVersionId" assignTo="{!cVersionId}" value="" />
            </apex:actionFunction>
            <apex:actionFunction status="ajax-status" name="userMultipleShare" action="{!userMultipleShare}" rerender="overviewDialog, shareDialog, messages">
                <apex:param name="cVersionIds" assignTo="{!cVersionIds}" value="" />
            </apex:actionFunction>
            
            <apex:actionFunction status="ajax-status" name="addToBasket" action="{!addToBasket}" rerender="messages, currentBasketItemsNo, pageContent, downloadAllDialog">
                <apex:param name="cVersionId" assignTo="{!cVersionId}" value="" />
            </apex:actionFunction>
            <apex:actionFunction status="ajax-status" name="removeFromBasket" action="{!removeFromBasket}" rerender="messages, currentBasketItemsNo, pageContent, downloadAllDialog">
                <apex:param name="cVersionId" assignTo="{!cVersionId}" value="" />
            </apex:actionFunction>
            <apex:actionFunction status="ajax-status" name="addToBasketMultiple" action="{!addToBasketMultiple}" rerender="messages, currentBasketItemsNo, pageContent, downloadAllDialog">
                <apex:param name="cVersionIds" assignTo="{!cVersionIds}" value="" />
            </apex:actionFunction>
            <apex:actionFunction status="ajax-status" name="removeFromBasketMultiple" action="{!removeFromBasketMultiple}" rerender="messages, currentBasketItemsNo, pageContent, downloadAllDialog">
                <apex:param name="cVersionIds" assignTo="{!cVersionIds}" value="" />
            </apex:actionFunction>          
            <apex:actionFunction status="ajax-status" name="setFileToEdit" action="{!setFileToEdit}" rerender="editDialog">
                <apex:param name="fileToEdit" assignTo="{!fileToEdit}" value="" />
            </apex:actionFunction>
            
            <apex:actionFunction status="ajax-status" name="addToFollow" action="{!addToFollow}" rerender="messages, currentBasketItemsNo, pageContent, downloadAllDialog">
                <apex:param name="cVersionId" assignTo="{!cVersionId}" value="" />
            </apex:actionFunction>
            <apex:actionFunction status="ajax-status" name="removeFromFollow" action="{!removeFromFollow}" rerender="messages, currentBasketItemsNo, pageContent, downloadAllDialog">
                <apex:param name="cVersionId" assignTo="{!cVersionId}" value="" />
            </apex:actionFunction>
            <apex:actionFunction status="ajax-status" name="addToFollowMultiple" action="{!addToFollowMultiple}" rerender="messages, currentBasketItemsNo, pageContent, downloadAllDialog">
                <apex:param name="cVersionIds" assignTo="{!cVersionIds}" value="" />
            </apex:actionFunction>
            <apex:actionFunction status="ajax-status" name="removeFromFollowMultiple" action="{!removeFromFollowMultiple}" rerender="messages, currentBasketItemsNo, pageContent, downloadAllDialog">
                <apex:param name="cVersionIds" assignTo="{!cVersionIds}" value="" />
            </apex:actionFunction>
        </apex:form>

        <div id="uploadFileInfo" class="hidden dialog" >
            <apex:outputPanel id="uploadDialog">
                <apex:outputPanel id="uploadFileDialog" rendered="{!AND(!ISNULL(requestedFolder),!ISNULL(currentDistributorId),currentDistributorId!='', requestedFolder!='')}">
                    <div class="hidden" id="currentLocationUpload">
                        <input type="text" value="{!OrganizationalHierarchy}" class="currentOrgUnitId"/><br/>
                        <input type="text" value="{!OrganizationalHierarchyName}" class="currentOrgUnitName"/><br/>
                        <input type="text" value="{!currentDistributorId}" class="currentDistributorId"/><br/>
                        <input type="text" value="{!currentDistributor}" class="currentDistributorName"/><br/>
                        <input type="text" value="{!requestedFolder}" class="currentFoldersIds"/><br/>
                        <input type="text" value="{!requestedFolderName+''}" class="currentFoldersNames"/><br/>
                    </div>
                    <c:uploadFile isInternal="{!isInternalUser}" organizationalUnitId="{!OrganizationalHierarchy}" organizationalUnitName="{!OrganizationalHierarchyName}" distributorId="{!currentDistributorId}" distributorName="{!currentDistributor}" folderId="{!requestedFolder}" folderName="{!requestedFolderName+''}" afterUploadRedirectTo="{!currentPageUrl}{!currentPageUrlSections}"/>
                </apex:outputPanel>
            </apex:outputPanel>
        </div>
        
        <div id="editFileInfo" class="hidden dialog" >
            <apex:outputPanel id="editDialog">
                <apex:outputPanel id="editFileDialog" rendered="{!AND(!ISNULL(requestedFolder),!ISNULL(currentDistributorId),currentDistributorId!='',requestedFolder!='')}">
                    <c:editFile fileToEdit="{!fileToEdit}" organizationalUnitId="{!OrganizationalHierarchy}" organizationalUnitName="{!OrganizationalHierarchyName}" distributorId="{!currentDistributorId}" distributorName="{!currentDistributor}" folderId="{!requestedFolder}" folderName="{!requestedFolderName+''}" afterUploadRedirectTo="{!currentPageUrl}{!currentPageUrlSections}"/>
                </apex:outputPanel>
            </apex:outputPanel>
        </div>
            
        <div id="moreInfo" class="hidden dialog" >
            <apex:outputPanel id="overviewDialog">
                <c:overview cvid="{!cVersionId}" description="{!cDescr}" videoId="{!cVideoId}" isVideo="{!cIsVideo}" previewId="{!cPreviewId}" isPreview="{!cIsPreview}"/>
            </apex:outputPanel>        
        </div>

        <div id="addCommentInfo" class="hidden dialog" >
            <apex:outputPanel id="addCommentDialog" rendered="{!AND(!ISNULL(requestedFolder))}">
                <c:addComment distributor="{!currentDistributor}" distributorId="{!currentDistributorId}" folderName="{!requestedFolderName}" folderId="{!requestedFolder}" fileId="{!currentConversationFileId}" isInternalUser="{!isInternalUser}"/>
            </apex:outputPanel>
        </div>                              

        <div id="shareInfo" class="hidden dialog">
            <apex:outputPanel id="shareDialog">
                <c:share cvid="{!cVersionId}" cvids="{!cVersionIds}" description="{!cDescr}" cShareLink="{!cShareLink}" cShareLinkLow="{!cShareLinkLow}"/>
            </apex:outputPanel>        
        </div>          
    </div>

    <c:ajaxLoader afterStop="bindJs();"/>
    <script type="text/javascript">

    function populateFileUploadWithCurrentDestination(){
        firstDestination = jQuery('.one-destination-wrapper').first();

        if(firstDestination.length == 1){
            // hide other destinations
            jQuery('.one-destination-wrapper').not(firstDestination).addClass('hidden');
            jQuery('.destinationIndexHolder').val('0,');

            var folderIdsString = jQuery('#currentLocationUpload').find('input.currentFoldersIds').val()+',';
            var folderNameString = jQuery('#currentLocationUpload').find('input.currentFoldersNames').val()+',';
            var geographyUploadId = jQuery('#currentLocationUpload').find('input.currentOrgUnitId').val();
            var geographyUploadName = jQuery('#currentLocationUpload').find('input.currentOrgUnitName').val();
            var distributorUploadId = jQuery('#currentLocationUpload').find('input.currentDistributorId').val();
            var distributorUploadName = jQuery('#currentLocationUpload').find('input.currentDistributorName').val();

            // populate data
            var dataHolder = firstDestination.find('.uploadInformation');
            dataHolder.find('input.orgUnitId').val(geographyUploadId);
            dataHolder.find('input.orgUnitName').val(geographyUploadName);
            dataHolder.find('input.distributorId').val(distributorUploadId);
            dataHolder.find('input.distributorName').val(distributorUploadName);
            dataHolder.find('input.foldersIds').val(folderIdsString);
            dataHolder.find('input.foldersNames').val(folderNameString);
            // display information
            firstDestination.find('.one-destination-description').find('.ddname').html(distributorUploadName);
            firstDestination.find('.one-destination-description').find('.dfname').html(folderNameString);
            // end of populate data
        }
    }
    
    function calculateBoxHeight(){
         jQuery("div.content-item").each(function(i, elem){
            var bottomValue = jQuery("div.item-description", elem).height()-jQuery("div.content-item-menu div", elem).height() - 5;
            jQuery("div.item-description", elem).css('bottom', -bottomValue+"px");
         });
    }
    
    function bindJs(){
        var isiPad = navigator.userAgent.match(/iPad/i) != null;
        jQuery('#addCommentInfo').removeClass('readyToShowInvisible');            
        if( isiPad == true){
            jQuery("div.content-item-list-description").live('touchstart', function(){
                jQuery("div.content-item-list-buttons").addClass("hidden");
                jQuery(this).parent().find("div.content-item-list-buttons").removeClass("hidden");
                return false;
            });
        }
        
        if(!jQuery(".file-comment-holder").hasClass('js-scroll')){
            jQuery(".file-comment-holder").jScrollPane();
            jQuery(".file-comment-holder").addClass('js-scroll');
            jQuery('.file-comment-content').last().css('border-color', 'transparent');
        }

        if(!jQuery(".comment-holder").hasClass('js-scroll')){
            jQuery(".comment-holder").jScrollPane();
            jQuery(".comment-holder").addClass('js-scroll');
        }

        calculateBoxHeight();
        
        jQuery('.extrabreadcrumbs').each(function(){
            var wdth = jQuery(this).find('.button-bread').width();
            jQuery(this).find('.breadcrumbs-wrapper-ext').css('width', wdth+5);
        });
        
        if(jQuery('.showUploadDialog').length == 1){
            showDialog('uploadFileInfo');
            margeLocations();
        }
        
        jQuery('.availableUntil').datepicker({
            showOtherMonths: true,
            changeMonth: true,
            changeYear: true,
            closeText: 'Close',
            showButtonPanel :true,
            selectOtherMonths: true,
            dateFormat: 'mm/dd/yy'
        });
    }

    jQuery(document).ready(function() {
        bindJs();
        function margeLocations(){
            try {
                var selectedFolders = '';
                jQuery('.destinations-holder').find('input.foldersIds').each(function(){
                    if(!jQuery(this).parents('.one-destination-wrapper').hasClass('hidden')){
                        selectedFolders += jQuery(this).val() +',';
                    }
                });
                if(selectedFolders == null || selectedFolders == ''){
                    return;
                }
                showDialog('ajaxLoader');
                Controller_BaseRemote.getFoldersMergedLocations(selectedFolders, function(data, event){
                    if (event.status) {
                        jQuery('.dfname').html(data);
                        setTimeout("hideDialog('ajaxLoader');", 500);
                        //sucess
                    } else if (event.type === 'exception') {
                        alert(event.message);
                    } else {
                        alert(event.message);
                    }
                }, {escape:true});
            } catch (err){
                alert(err.message);
            }
        }
        
        function updateDistributorsUpload(){
            try {
                var geographyUpload = jQuery('#geographyUpload').find('select').val();
                if(geographyUpload == null || geographyUpload == ''){
                    alert('Please select organizational unit.');
                    return;
                }
                showDialog('ajaxLoader');
                
                Controller_BaseRemote.getDistributorsForOrgUnit(geographyUpload, function(data, event){
                    if (event.status) {
                        // clear current selectbox
                        selectBox = jQuery('#distributorUpload').find('select');
                        customSelectBox = jQuery('#distributorUpload').find('.custom-select-box-values');
                        
                        // remove current values
                        selectBox.find('option').remove();
                        customSelectBox.replaceWith("<div class='custom-select-box-values'></div>");
                        customSelectBox = jQuery('#distributorUpload').find('.custom-select-box-values');
                                
                        //populate data
                        jQuery.each(data, function(index,value){
                            selectBox.append('<option value="'+value.Id+'">'+value.Name+'</option>')
                            customSelectBox.append('<div title="'+value.Name+'" name="'+value.Id+'" class="bold custom-select-box-item">'+value.Name+'</div>');
                        });
                        
                        //setup first value as selected
                        customValue = selectBox.find('option').first();
                        jQuery('#distributorUpload').find('.custom-select-box-val').html('');
                        if(customValue.length == 1){
                            customValue.attr('selected', true);
                            jQuery('#distributorUpload').find('.custom-select-box-val').html(customValue.text());
                            jQuery('#distributorUpload').find('.custom-select-box-item').first().addClass('current');
                        }
                        jQuery('#distributorUpload').find('.custom-select-box-values').jScrollPane();
                        //sucess
                        setTimeout("hideDialog('ajaxLoader');", 500);
                    } else if (event.type === 'exception') {
                        alert(event.message);
                    } else {
                        alert(event.message);
                    }
                }, {escape:true});
            } catch (err){
                alert(err.message);
            }
        }
        jQuery('#geographyUpload').find('select').live('change',function(){
            updateDistributorsUpload();
        });
        
        jQuery('.uploadButton').live('click',function(){
            var isValid = true;
            // file(s) exists
            if(jQuery('.one-file-wrapper').not('.hidden').size() == 0){
                isValid = false;
                alert("Please select at least one file.");
            }
            // location(s) exists
            if(jQuery('.one-destination-wrapper').not('.hidden').size() == 0){
                isValid = false;
                alert("Please select at least one destination.");
            }
            // description(s) exists
            jQuery('.one-file-wrapper').not('.hidden').each(function(){
                var dValue = jQuery(this).find('input.fDescription').val();
                if(dValue == null || (dValue != null && dValue.trim() == '')){
                    isValid = false;
                    alert("Description field is required.");
                    return false;
                }
                var fValue = jQuery(this).find('input.fileinput').val();
                if(fValue == null || (fValue != null && fValue.trim() == '')){
                    isValid = false;
                    alert("File field is required.");
                    return false;
                }
            });
            // date is valid
            dateValue = jQuery('.availableUntil').val();
            if(dateValue != null && dateValue != '' && dateValue != "mm/dd/yyyy"){
                try{
                    jQuery.datepicker.parseDate('mm/dd/yy', jQuery('.availableUntil').val());
                } catch(e){
                    isValid = false;
                    alert("Invalid date format.");
                }
            }
            
            // comment is not grater then 1000 chars
            if(jQuery('.uploadComment').val() != null){
                commentValue = jQuery('.uploadComment').val();
                if(commentValue.length >= 999){
                    isValid = false;
                    alert("Comment text is too long.");
                }
            }
            if(isValid){
                showDialog('ajaxLoader');
                jQuery('.uploadButtonReal').trigger('click');
            }
        });
        
        jQuery('.folder').live('click',function(){
            if(jQuery(this).hasClass('folder-selected')){
                jQuery(this).removeClass('folder-selected');
                jQuery(this).prev('input[type=checkbox]').attr('checked', false);
            } else {
                jQuery(this).addClass('folder-selected');
                jQuery(this).prev('input[type=checkbox]').attr('checked', true);
            }
        });
        jQuery('.addDistributor').live('click',function(){
            jQuery('.destination-navigation').addClass('hidden');
            jQuery('.select-destination-stage-two').addClass('hidden');
            jQuery('.select-destination-stage-one').removeClass('hidden');
            jQuery('#distributorUpload').find('.custom-select-box-values').jScrollPane();
            jQuery('#geographyUpload').find('.custom-select-box-values').jScrollPane();
            updateDistributorsUpload();
        }); 
        jQuery('.addFolder').live('click',function(){
            try {
                var geographyUpload = jQuery('#geographyUpload').find('select').val();
                var distributorUpload = jQuery('#distributorUpload').find('select').val();
                isInternalUserRequest = {!isInternalUser};
                if(geographyUpload == null || geographyUpload == '' || distributorUpload == null || distributorUpload == '' ){
                    alert('Please select organizational unit and distributor.');
                    return;
                }
                showDialog('ajaxLoader');
                Controller_BaseRemote.getFoldersOptions(geographyUpload, distributorUpload, isInternalUserRequest, function(data, event){
                    if (event.status) {
                        var currentFolderClass = '';
                        var currentFolderSelectedId = jQuery('#currentLocationUpload').find('input.currentFoldersIds').val();
                        treeString = '<div class="folder-upload-tree-wrapper"><ul id="folder-upload-tree" class="folder-section">';
                        jQuery.each(data, function(index, tree){
                            currentFolderClass = '';
                            if(tree.value == currentFolderSelectedId) { currentFolderClass = 'folder-selected'; }
                            treeString += '<li>';
                            treeString += '<span class="folder main-folders '+currentFolderClass+'" id="'+tree.value+'">'+tree.label+'</span>';
                            treeString += '<ul class="folder-section">';
                            jQuery.each(tree.children, function(index, ctree){
                                currentFolderClass = '';
                                if(ctree.value == currentFolderSelectedId) { currentFolderClass = 'folder-selected'; }
                                treeString += '<li>';
                                treeString += '<span class="folder main-folders '+currentFolderClass+'" id="'+ctree.value+'">'+ctree.label+'</span>';
                                treeString += '<ul class="folder-section">';
                                jQuery.each(ctree.children, function(index, cctree){
                                    currentFolderClass = '';
                                    if(cctree.value == currentFolderSelectedId) { currentFolderClass = 'folder-selected'; }
                                    treeString += '<li>';
                                    treeString += '<span class="folder main-folders '+currentFolderClass+'" id="'+cctree.value+'">'+cctree.label+'</span>';
                                    treeString += '<ul class="folder-section">';
                                    jQuery.each(cctree.children, function(index, ccctree){
                                        currentFolderClass = '';
                                        if(ccctree.value == currentFolderSelectedId) { currentFolderClass = 'folder-selected'; }
                                        treeString += '<li>';
                                        treeString += '<span class="folder main-folders '+currentFolderClass+'" id="'+ccctree.value+'">'+ccctree.label+'</span>';
                                        treeString += '<ul class="folder-section">';
                                        jQuery.each(ccctree.children, function(index, cccctree){
                                            currentFolderClass = '';
                                            if(cccctree.value == currentFolderSelectedId) { currentFolderClass = 'folder-selected'; }
                                            treeString += '<li>';
                                            treeString += '<span class="folder main-folders '+currentFolderClass+'" id="'+cccctree.value+'">'+cccctree.value+'</span>';
                                            treeString += '</li>';
                                        });
                                        treeString += '</ul>';
                                        treeString += '</li>';
                                    });
                                    treeString += '</ul>';
                                    treeString += '</li>';
                                });
                                treeString += '</ul>';
                                treeString += '</li>';
                            });
                            treeString += '</ul>';
                            treeString += '</li>';
                        });
                        treeString += '</ul></div>';
                        jQuery('.folder-upload-tree-wrapper').replaceWith(jQuery(treeString));
                        jQuery('.destination-navigation').addClass('hidden');
                        jQuery('.select-destination-stage-one').addClass('hidden');
                        jQuery('.select-destination-stage-two').removeClass('hidden');
                        jQuery("#folder-upload-tree").treeview({
                            animated: "medium",
                            collapsed: false
                        });
                        jQuery('.folder-upload-tree-wrapper').jScrollPane();
                        //sucess
                        setTimeout("hideDialog('ajaxLoader');", 500);
                    } else if (event.type === 'exception') {
                        alert(event.message);
                    } else {
                        alert(event.message);
                    }
                }, {escape:true});
            } catch (err){
                alert(err.message);
            }
        }); 
        jQuery('.addDestination').live('click',function(){
            geographyUploadOption = jQuery('#geographyUpload').find('select option:selected');
            distributorUploadOption = jQuery('#distributorUpload').find('select option:selected');
            folderIdsString = '';
            folderNameString = '';
            jQuery('.folder-upload-tree-wrapper').find('.folder-selected').each(function(){
                folderIdsString += jQuery(this).attr('id')+',';
                folderNameString += jQuery(this).html()+',';
            });
            if(geographyUploadOption.val() == null || geographyUploadOption.val() == '' || distributorUploadOption.val() == null || distributorUploadOption.val() == '' || folderIdsString == '' ){
                alert('Please select organizational unit, distributor and folder.');
                return;
            }           
            jQuery('.destination-navigation').removeClass('hidden');
            jQuery('.select-destination-stage-one').addClass('hidden');
            jQuery('.select-destination-stage-two').addClass('hidden');
            toShow = jQuery('.one-destination-wrapper.hidden').first();
            if(toShow.length == 1){
                idx = toShow.index();
                toShow.removeClass('hidden')
                jQuery('.destinationIndexHolder').val(jQuery('.destinationIndexHolder').val()+idx+',');
                // populate data
                dataHolder = toShow.find('.uploadInformation');
                dataHolder.find('input.orgUnitId').val(geographyUploadOption.val());
                var txtDivision = geographyUploadOption.text();
                var txtDivisionToShow = txtDivision.substr(txtDivision.lastIndexOf('-')+1,txtDivision.length).trim();
                dataHolder.find('input.orgUnitName').val(txtDivisionToShow);
                dataHolder.find('input.distributorId').val(distributorUploadOption.val());
                dataHolder.find('input.distributorName').val(distributorUploadOption.text());
                dataHolder.find('input.foldersIds').val(folderIdsString);
                dataHolder.find('input.foldersNames').val(folderNameString);
                // display information
                toShow.find('.one-destination-description').find('.ddname').html(distributorUploadOption.text());
                toShow.find('.one-destination-description').find('.dfname').html(folderNameString);
                margeLocations();
                // end of populate data
            }
            nextToShow = jQuery('.one-destination-wrapper.hidden').first();
            if(nextToShow.length == 0){
                jQuery('.addDistributor').addClass('hidden');
            } else {
                jQuery('.addDistributor').removeClass('hidden');
            }
        }); 
        jQuery('.removeDestination').live('click',function(){
            toRemove = jQuery(this).parents('.one-destination-wrapper');
            if(toRemove.length == 1){
                idx = toRemove.index();
                toRemove.addClass('hidden')
                jQuery('.destinationIndexHolder').val(jQuery('.destinationIndexHolder').val().replace(idx+',',''));
            }
            nextToShow = jQuery('.one-destination-wrapper.hidden').first();
            if(nextToShow.length != 0){
                jQuery('.addDistributor').removeClass('hidden');
            } else {
                jQuery('.addDistributor').addClass('hidden');
            }
            margeLocations();
        }); 
        jQuery('.closeAddingDestination').live('click',function(){
            jQuery('.destination-navigation').removeClass('hidden');
            jQuery('.select-destination-stage-two').addClass('hidden');
            jQuery('.select-destination-stage-one').addClass('hidden');
        }); 
        jQuery('.addFile').live('click',function(){
            toShow = jQuery('.one-file-wrapper.hidden').first();
            if(toShow.length == 1){
                idx = toShow.index('.one-file-wrapper');
                toShow.removeClass('hidden')
                toShow.find('input.fDescription').val('');
                jQuery('.fileIndexHolder').val(jQuery('.fileIndexHolder').val()+idx+',');
            }
            nextToShow = jQuery('.one-file-wrapper.hidden').first();
            if(nextToShow.length == 0){
                jQuery(this).addClass('hidden');
            } else {
                jQuery(this).removeClass('hidden');
            }
            //jQuery('.file-scroller').jScrollPane();
        });
        jQuery('.removeFile').live('click',function(){
            toRemove = jQuery(this).parents('.one-file-wrapper');
            if(toRemove.length == 1){
                idx = toRemove.index('.one-file-wrapper');
                toRemove.addClass('hidden')
                jQuery('.fileIndexHolder').val(jQuery('.fileIndexHolder').val().replace(idx+',',''));
            }
            nextToShow = jQuery('.one-file-wrapper.hidden').first();
            if(nextToShow.length != 0){
                jQuery('.addFile').removeClass('hidden');
            } else {
                jQuery('.addFile').addClass('hidden');
            }
            //jQuery('.file-scroller').jScrollPane();
        });
        if({!IF(currentDistributorId == '','true','false')}){
            jQuery('.extrabreadcrumbs').find(".subnav:not('.subnav2')").last().css('display', 'block');
        }
        hideDialog('startingLoader');
        hideDialog('startingLoaderOverlayDisable');
        jQuery("body").css("overflow","auto");
        jQuery("html").css("overflow","auto");
    });
    </script>
    
</apex:page>